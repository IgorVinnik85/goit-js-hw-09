{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAdMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAgBtB,SAAqBC,GAGnB,GAFAA,EAAMC,iBAGkC,KAAtCD,EAAME,OAAOC,SAASd,MAAMe,OACS,KAArCJ,EAAME,OAAOC,SAASE,KAAKD,OACY,KAAvCJ,EAAME,OAAOC,SAASG,OAAOF,MAG7B,YADAnB,EAAAsB,OAAOC,QAAQ,2BAIjB,IAAIC,GAAST,EAAME,OAAOC,SAASd,MAAMe,MACnCC,GAAQL,EAAME,OAAOC,SAASE,KAAKD,MACnCE,GAAUN,EAAME,OAAOC,SAASG,OAAOF,MAE7CJ,EAAME,OAAOQ,QAEb,IAAK,IAAIC,EAAQ,EAAGA,GAASL,EAAQK,GAAS,EAC5CxB,EAAcwB,EAAOF,GAClBG,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjBJ,EAAAsB,OAAOO,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAE9D2B,OAAM,SAAAH,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClBJ,EAAAsB,OAAOC,QAAQ,sBAAqCO,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAE9DoB,GAASJ,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix/build/notiflix-notify-aio\";\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", getPromises);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction getPromises(event) {\n  event.preventDefault();\n\n  if (\n    event.target.elements.delay.value === '' ||\n    event.target.elements.step.value === '' ||\n    event.target.elements.amount.value === ''\n  ) {\n    Notify.failure(\"Fill the fields, please\");\n    return;\n  }\n\n  let delay = +event.target.elements.delay.value;\n  const step = +event.target.elements.step.value;\n  const amount = +event.target.elements.amount.value;\n  \n  event.target.reset()\n\n  for (let index = 1; index <= amount; index += 1) {\n    createPromise(index, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","target","elements","value","step","amount","Notify","failure","delay1","reset","index","then","param","success","concat","catch"],"version":3,"file":"03-promises.d684e7e8.js.map"}